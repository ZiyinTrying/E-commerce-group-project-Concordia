{"ast":null,"code":"var _jsxFileName = \"/Users/gracechen/Documents/Documents - Grace\\u2019s MacBook Pro/concordia-bootcamps/project-GROUP-e-commerce/client/src/components/DropDown.js\";\nimport React, { createContext, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport arrow from \"../arrow.png\";\n\nconst DropDown = () => {\n  const history = useHistory();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [categories, setCategories] = useState(null);\n\n  const getCategory = ev => {\n    setSelectedCategory(ev.target.value);\n    history.push(`/items/category/${ev.target.value}`);\n  }; // fetch the categories and put it into state catogory\n\n\n  useEffect(() => {\n    fetch(\"/categories\").then(res => res.json()).then(data => {\n      // console.log(data);\n      setCategories(data.data);\n    }).catch(err => {\n      console.log(\"error\");\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n    onChange: ev => getCategory(ev),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Select Catogory\"), categories === null || categories === void 0 ? void 0 : categories.map((category, index) => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: index,\n      value: category.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, category.name);\n  })));\n};\n\nconst Select = styled.select`\n  position: fixed;\n  z-index: -1;\n  top: 80px;\n  z-index: 2;\n  width: 100%;\n  font-size: 20px;\n  color: var(--color-dark-grey);\n  padding: 10px 20px;\n  background-color: var(--color-lime);\n  border-radius: 0 0 5px 5px;\n  border: none;\n  appearance: none;\n  transition: background-color 400ms ease-in-out;\n  background-image: url(${arrow});\n  background-repeat: no-repeat;\n  background-position: 175px center;\n  background-size: 15px 15px;\n  &:hover {\n    cursor: pointer;\n    background-color: var(--color-neon-lime);\n  }\n`;\nconst Option = styled.option`\n  color: blue;\n  border: 2px solid black;\n`;\nexport default DropDown;","map":{"version":3,"sources":["/Users/gracechen/Documents/Documents - Graceâ€™s MacBook Pro/concordia-bootcamps/project-GROUP-e-commerce/client/src/components/DropDown.js"],"names":["React","createContext","useState","useEffect","styled","useHistory","arrow","DropDown","history","selectedCategory","setSelectedCategory","categories","setCategories","getCategory","ev","target","value","push","fetch","then","res","json","data","catch","err","console","log","map","category","index","name","Select","select","Option","option"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AAEA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;;AACA,QAAMW,WAAW,GAAIC,EAAD,IAAQ;AAC1BJ,IAAAA,mBAAmB,CAACI,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAnB;AACAR,IAAAA,OAAO,CAACS,IAAR,CAAc,mBAAkBH,EAAE,CAACC,MAAH,CAAUC,KAAM,EAAhD;AACD,GAHD,CALqB,CASrB;;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,KAAK,CAAC,aAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd;AACAV,MAAAA,aAAa,CAACU,IAAI,CAACA,IAAN,CAAb;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KARH;AASD,GAVQ,EAUN,EAVM,CAAT;AAWA,sBACE,uDACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAGZ,EAAD,IAAQD,WAAW,CAACC,EAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEGH,UAFH,aAEGA,UAFH,uBAEGA,UAAU,CAAEgB,GAAZ,CAAgB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACpC,wBACE,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAED,QAAQ,CAACE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,QAAQ,CAACE,IADZ,CADF;AAKD,GANA,CAFH,CADF,CADF;AAcD,CAnCD;;AAoCA,MAAMC,MAAM,GAAG3B,MAAM,CAAC4B,MAAO;;;;;;;;;;;;;;0BAcH1B,KAAM;;;;;;;;CAdhC;AAuBA,MAAM2B,MAAM,GAAG7B,MAAM,CAAC8B,MAAO;;;CAA7B;AAIA,eAAe3B,QAAf","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport arrow from \"../arrow.png\";\n\nconst DropDown = () => {\n  const history = useHistory();\n\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [categories, setCategories] = useState(null);\n  const getCategory = (ev) => {\n    setSelectedCategory(ev.target.value);\n    history.push(`/items/category/${ev.target.value}`);\n  };\n  // fetch the categories and put it into state catogory\n  useEffect(() => {\n    fetch(\"/categories\")\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data);\n        setCategories(data.data);\n      })\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, []);\n  return (\n    <>\n      <Select onChange={(ev) => getCategory(ev)}>\n        <Option>Select Catogory</Option>\n        {categories?.map((category, index) => {\n          return (\n            <Option key={index} value={category.name}>\n              {category.name}\n            </Option>\n          );\n        })}\n      </Select>\n    </>\n  );\n};\nconst Select = styled.select`\n  position: fixed;\n  z-index: -1;\n  top: 80px;\n  z-index: 2;\n  width: 100%;\n  font-size: 20px;\n  color: var(--color-dark-grey);\n  padding: 10px 20px;\n  background-color: var(--color-lime);\n  border-radius: 0 0 5px 5px;\n  border: none;\n  appearance: none;\n  transition: background-color 400ms ease-in-out;\n  background-image: url(${arrow});\n  background-repeat: no-repeat;\n  background-position: 175px center;\n  background-size: 15px 15px;\n  &:hover {\n    cursor: pointer;\n    background-color: var(--color-neon-lime);\n  }\n`;\nconst Option = styled.option`\n  color: blue;\n  border: 2px solid black;\n`;\nexport default DropDown;\n"]},"metadata":{},"sourceType":"module"}