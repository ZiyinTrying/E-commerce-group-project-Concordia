{"ast":null,"code":"var _jsxFileName = \"/Users/gracechen/Documents/Documents - Grace\\u2019s MacBook Pro/concordia-bootcamps/project-GROUP-e-commerce/client/src/components/SearchBar.js\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst SearchBar = () => {\n  const [input, setInput] = useState(\"\");\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const reset = () => {\n    setInput(\"\");\n  };\n\n  const handleKeyDown = ev => {\n    switch (ev.key) {\n      case \"Enter\":\n        {\n          handleSelect(ev.target.value);\n        }\n    }\n  };\n\n  let matchedSuggestions = [];\n\n  if (input.length >= 2) {\n    matchedSuggestions = suggestions.filter(suggestion => {\n      return suggestion.title.toLowerCase().includes(input.toLowerCase());\n    });\n    console.log(matchedSuggestions);\n  }\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchInput, {\n    type: \"text\",\n    value: input,\n    onChange: handleChange,\n    onKeyDown: handleKeyDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), matchedSuggestions.length >= 1 && /*#__PURE__*/React.createElement(SuggestList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, matchedSuggestions.map(suggestion => {\n    let index = suggestion.title.toLowerCase().indexOf(input.toLowerCase());\n    let normalText = suggestion.title.slice(0, index + input.length);\n    let boldText = suggestion.title.slice(index + input.length);\n    return /*#__PURE__*/React.createElement(SuggestItem, {\n      key: suggestion.id,\n      onClick: () => handleSelect(suggestion.title),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Span, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, normalText, /*#__PURE__*/React.createElement(Prediction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, boldText)), /*#__PURE__*/React.createElement(Category, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, \" \", \"in \", /*#__PURE__*/React.createElement(Purple, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 24\n      }\n    }, suggestion.categoryId)));\n  }))), /*#__PURE__*/React.createElement(Clear, {\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Clear\"));\n};\n\nexport default SearchBar;\nconst Wrapper = styled.div`\n  display: flex;\n\n  margin-top: 20px;\n`;\nconst SearchInput = styled.input`\n  background: var(--color-light-grey);\n  padding: 10px;\n  border-radius: 5px;\n  border: none;\n  width: 300px;\n  font-size: 18px;\n`;\nconst Search = styled.div`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n`;\nconst Input = styled.input`\n  padding: 10px 10px;\n  margin: 8px;\n  width: 300px;\n  height: 40px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  outline-color: red;\n`;\nconst SuggestList = styled.ul`\n  margin: 8px 8px;\n  border-radius: 5px;\n  box-shadow: 0px 3px 10px rgb(234, 234, 234);\n  width: 400px;\n  padding: 10px;\n`;\nconst SuggestItem = styled.li`\n  padding: 10px 5px;\n  cursor: pointer;\n\n  &:hover,\n  & :active {\n    background-color: lightyellow;\n  }\n`;\nconst Span = styled.span`\n  color: black;\n`;\nconst Clear = styled.button`\n  width: 100px;\n  height: 40px;\n  border-radius: 3px;\n  padding: 10px 0;\n  color: white;\n  background-color: rgb(42, 11, 206);\n  margin-top: 9px;\n  margin-left: -90px;\n\n  text-align: center;\n  cursor: pointer;\n`;\nconst Prediction = styled.span`\n  font-weight: 600;\n`;\nconst Category = styled.span`\n  font-style: italic;\n`;\nconst Purple = styled.span`\n  color: rgb(152, 82, 159);\n`;","map":{"version":3,"sources":["/Users/gracechen/Documents/Documents - Graceâ€™s MacBook Pro/concordia-bootcamps/project-GROUP-e-commerce/client/src/components/SearchBar.js"],"names":["React","useState","styled","SearchBar","input","setInput","handleChange","e","target","value","reset","handleKeyDown","ev","key","handleSelect","matchedSuggestions","length","suggestions","filter","suggestion","title","toLowerCase","includes","console","log","map","index","indexOf","normalText","slice","boldText","id","categoryId","Wrapper","div","SearchInput","Search","Input","SuggestList","ul","SuggestItem","li","Span","span","Clear","button","Prediction","Category","Purple"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst SearchBar = () => {\n  const [input, setInput] = useState(\"\");\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n  const reset = () => {\n    setInput(\"\");\n  };\n\n  const handleKeyDown = (ev) => {\n    switch (ev.key) {\n      case \"Enter\": {\n        handleSelect(ev.target.value);\n      }\n    }\n  };\n  let matchedSuggestions = [];\n  if (input.length >= 2) {\n    matchedSuggestions = suggestions.filter((suggestion) => {\n      return suggestion.title.toLowerCase().includes(input.toLowerCase());\n    });\n    console.log(matchedSuggestions);\n  }\n\n  return (\n    <Wrapper>\n      <Search>\n        <SearchInput\n          type=\"text\"\n          value={input}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n        />\n        {matchedSuggestions.length >= 1 && (\n          <SuggestList>\n            {matchedSuggestions.map((suggestion) => {\n              let index = suggestion.title\n                .toLowerCase()\n                .indexOf(input.toLowerCase());\n\n              let normalText = suggestion.title.slice(0, index + input.length);\n              let boldText = suggestion.title.slice(index + input.length);\n              return (\n                <SuggestItem\n                  key={suggestion.id}\n                  onClick={() => handleSelect(suggestion.title)}\n                >\n                  {/* {suggestion.title} */}\n                  <Span>\n                    {normalText}\n                    <Prediction>{boldText}</Prediction>\n                  </Span>\n                  <Category>\n                    {\" \"}\n                    in <Purple>{suggestion.categoryId}</Purple>\n                  </Category>\n                </SuggestItem>\n              );\n            })}\n          </SuggestList>\n        )}\n      </Search>\n      <Clear onClick={reset}>Clear</Clear>\n    </Wrapper>\n  );\n};\n\nexport default SearchBar;\n\nconst Wrapper = styled.div`\n  display: flex;\n\n  margin-top: 20px;\n`;\nconst SearchInput = styled.input`\n  background: var(--color-light-grey);\n  padding: 10px;\n  border-radius: 5px;\n  border: none;\n  width: 300px;\n  font-size: 18px;\n`;\n\nconst Search = styled.div`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Input = styled.input`\n  padding: 10px 10px;\n  margin: 8px;\n  width: 300px;\n  height: 40px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  outline-color: red;\n`;\nconst SuggestList = styled.ul`\n  margin: 8px 8px;\n  border-radius: 5px;\n  box-shadow: 0px 3px 10px rgb(234, 234, 234);\n  width: 400px;\n  padding: 10px;\n`;\nconst SuggestItem = styled.li`\n  padding: 10px 5px;\n  cursor: pointer;\n\n  &:hover,\n  & :active {\n    background-color: lightyellow;\n  }\n`;\nconst Span = styled.span`\n  color: black;\n`;\n\nconst Clear = styled.button`\n  width: 100px;\n  height: 40px;\n  border-radius: 3px;\n  padding: 10px 0;\n  color: white;\n  background-color: rgb(42, 11, 206);\n  margin-top: 9px;\n  margin-left: -90px;\n\n  text-align: center;\n  cursor: pointer;\n`;\nconst Prediction = styled.span`\n  font-weight: 600;\n`;\nconst Category = styled.span`\n  font-style: italic;\n`;\nconst Purple = styled.span`\n  color: rgb(152, 82, 159);\n`;\n"]},"metadata":{},"sourceType":"module"}