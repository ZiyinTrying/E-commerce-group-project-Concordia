{"ast":null,"code":"var _jsxFileName = \"/Users/gracechen/Documents/Documents - Grace\\u2019s MacBook Pro/concordia-bootcamps/project-GROUP-e-commerce/client/src/components/ItemCard.js\";\nimport React, { createContext, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { ItemsContext } from \"./ItemsContext.js\";\n\nconst ItemCard = ({\n  item\n}) => {\n  const {\n    cartItems,\n    setCartItems\n  } = React.useContext(ItemsContext);\n  const history = useHistory(); // const [quantity, setQuantity] = useState(1);\n\n  const handleItemDetails = e => {\n    if (e.key === \"Enter\" || e.type === \"click\") {\n      history.push(`/item/${item._id}`);\n    }\n  }; ////\n  // const handleAddCart = (e) => {\n  //   // GOTTA FIX IT LATER\n  //   e.stopPropagation();\n  //   let myIndex;\n  //   //searchin for an item in the array who's id matches the id of the item we are addin to the cart\n  //   let selectedItem = cartItems.find((element, index) => {\n  //     if (item._id === element._id) {\n  //       myIndex = index;\n  //     }\n  //     return item._id === element._id;\n  //   });\n  //   //if we find selected item in the array of items, add selected quantity to the existing one;\n  //   if (selectedItem) {\n  //     //if we don't have enough of items give an alert\n  //     if (selectedItem?.quantity + 1 > item.numInStock) {\n  //       window.alert(\"Not enough of items\");\n  //     } else {\n  //       let cartCopy = [...cartItems];\n  //       let newQuantity = selectedItem?.quantity;\n  //       cartCopy[myIndex] = {\n  //         ...selectedItem,\n  //         quantity: 1 + newQuantity,\n  //       };\n  //       console.log(\"adding in 2d if\");\n  //       setCartItems(cartCopy);\n  //     }\n  //   }\n  //   //if we don't have matching item in the array - push it in the array\n  //   else {\n  //     console.log(\"adding in first if\");\n  //     setCartItems([...cartItems, { ...item, quantity: 1 }]);\n  //   }\n  //   if (cartItems?.length !== 0) {\n  //     localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  //   }\n  // };\n\n\n  const handleAddToCart = () => {\n    window.location.reload();\n    let myIndex; //searchin for an item in the array who's id matches the id of the item we are addin to the cart\n\n    let selectedItem = cartItems.find((element, index) => {\n      if (item._id === element._id) {\n        myIndex = index;\n      }\n\n      return item._id === element._id;\n    }); //if we find selected item in the array of items, add selected quantity to the existing one;\n\n    if (selectedItem) {\n      //if we don't have enough of items give an alert\n      if ((selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.quantity) + 1 > item.numInStock) {\n        window.alert(\"Not enough of items\");\n      } else {\n        let cartCopy = [...cartItems];\n        let newQuantity = selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.quantity;\n        cartCopy[myIndex] = { ...selectedItem,\n          quantity: 1 + newQuantity\n        };\n        setCartItems(cartCopy); // setReRender(!reRender)\n      }\n    } //if we don't have matching item in the array - push it in the array\n    else {\n        setCartItems([...cartItems, { ...item,\n          quantity: quantity\n        }]); // setReRender(!reRender)\n      }\n  }; //storing array with selected items in local storage if it's not empty\n\n\n  if ((cartItems === null || cartItems === void 0 ? void 0 : cartItems.length) !== 0) {\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  }\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    onClick: handleItemDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Img, {\n    src: item.imageSrc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Name, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, item.name), /*#__PURE__*/React.createElement(Price, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, item.price), /*#__PURE__*/React.createElement(AddCartButton, {\n    onClick: handleAddToCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, \"Add to Cart\")));\n};\n\nconst Wrapper = styled.div`\n  width: 350px;\n  height: 350px;\n  display: flex;\n  padding: 20px;\n  margin: 10px 20px;\n  border-radius: 10px;\n  transition: 0.4s ease-in-out;\n  background-color: var(--color-light-grey);\n  &:hover {\n    cursor: pointer;\n    box-shadow: -2px 2px 10px 5px #cacaca;\n  }\n`;\nconst Img = styled.img`\n  width: 200px;\n  max-height: 250px;\n  border-radius: 10px;\n`;\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n`;\nconst Name = styled.div``;\nconst Price = styled.div`\n  margin-top: 25px;\n`;\nconst AddCartButton = styled.button`\n  margin-top: 15px;\n  border: none;\n  border-radius: 8px;\n  font-family: \"Poppins\", sans-serif;\n  background-color: var(--color-lime);\n  width: 100px;\n  height: 40px;\n  transition: background-color 400ms ease-in-out;\n  &:hover {\n    cursor: pointer;\n    background-color: var(--color-neon-lime);\n\n    /* color: var(--color-neon-lime);\n    background-color: var(--color-dark-grey); */\n  }\n`;\nexport default ItemCard;","map":{"version":3,"sources":["/Users/gracechen/Documents/Documents - Graceâ€™s MacBook Pro/concordia-bootcamps/project-GROUP-e-commerce/client/src/components/ItemCard.js"],"names":["React","createContext","useState","useEffect","styled","useHistory","ItemsContext","ItemCard","item","cartItems","setCartItems","useContext","history","handleItemDetails","e","key","type","push","_id","handleAddToCart","window","location","reload","myIndex","selectedItem","find","element","index","quantity","numInStock","alert","cartCopy","newQuantity","length","localStorage","setItem","JSON","stringify","imageSrc","name","price","Wrapper","div","Img","img","Info","Name","Price","AddCartButton","button"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { ItemsContext } from \"./ItemsContext.js\";\n\nconst ItemCard = ({ item }) => {\n  const { cartItems, setCartItems } = React.useContext(ItemsContext);\n\n  const history = useHistory();\n\n  // const [quantity, setQuantity] = useState(1);\n  const handleItemDetails = (e) => {\n    if (e.key === \"Enter\" || e.type === \"click\") {\n      history.push(`/item/${item._id}`);\n    }\n  };\n  ////\n  // const handleAddCart = (e) => {\n  //   // GOTTA FIX IT LATER\n  //   e.stopPropagation();\n  //   let myIndex;\n  //   //searchin for an item in the array who's id matches the id of the item we are addin to the cart\n  //   let selectedItem = cartItems.find((element, index) => {\n  //     if (item._id === element._id) {\n  //       myIndex = index;\n  //     }\n\n  //     return item._id === element._id;\n  //   });\n\n  //   //if we find selected item in the array of items, add selected quantity to the existing one;\n  //   if (selectedItem) {\n  //     //if we don't have enough of items give an alert\n  //     if (selectedItem?.quantity + 1 > item.numInStock) {\n  //       window.alert(\"Not enough of items\");\n  //     } else {\n  //       let cartCopy = [...cartItems];\n  //       let newQuantity = selectedItem?.quantity;\n  //       cartCopy[myIndex] = {\n  //         ...selectedItem,\n  //         quantity: 1 + newQuantity,\n  //       };\n  //       console.log(\"adding in 2d if\");\n  //       setCartItems(cartCopy);\n  //     }\n  //   }\n\n  //   //if we don't have matching item in the array - push it in the array\n  //   else {\n  //     console.log(\"adding in first if\");\n  //     setCartItems([...cartItems, { ...item, quantity: 1 }]);\n  //   }\n  //   if (cartItems?.length !== 0) {\n  //     localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  //   }\n  // };\n  const handleAddToCart = () => {\n    window.location.reload();\n    let myIndex;\n\n    //searchin for an item in the array who's id matches the id of the item we are addin to the cart\n    let selectedItem = cartItems.find((element, index) => {\n      if (item._id === element._id) {\n        myIndex = index;\n      }\n\n      return item._id === element._id;\n    });\n\n    //if we find selected item in the array of items, add selected quantity to the existing one;\n    if (selectedItem) {\n      //if we don't have enough of items give an alert\n      if (selectedItem?.quantity + 1 > item.numInStock) {\n        window.alert(\"Not enough of items\");\n      } else {\n        let cartCopy = [...cartItems];\n        let newQuantity = selectedItem?.quantity;\n        cartCopy[myIndex] = {\n          ...selectedItem,\n          quantity: 1 + newQuantity,\n        };\n        setCartItems(cartCopy);\n        // setReRender(!reRender)\n      }\n    }\n\n    //if we don't have matching item in the array - push it in the array\n    else {\n      setCartItems([...cartItems, { ...item, quantity: quantity }]);\n      // setReRender(!reRender)\n    }\n  };\n\n  //storing array with selected items in local storage if it's not empty\n  if (cartItems?.length !== 0) {\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  }\n  return (\n    <Wrapper onClick={handleItemDetails}>\n      <Img src={item.imageSrc} />\n      <Info>\n        <Name>{item.name}</Name>\n        <Price>{item.price}</Price>\n\n        <AddCartButton onClick={handleAddToCart}>Add to Cart</AddCartButton>\n      </Info>\n    </Wrapper>\n  );\n};\nconst Wrapper = styled.div`\n  width: 350px;\n  height: 350px;\n  display: flex;\n  padding: 20px;\n  margin: 10px 20px;\n  border-radius: 10px;\n  transition: 0.4s ease-in-out;\n  background-color: var(--color-light-grey);\n  &:hover {\n    cursor: pointer;\n    box-shadow: -2px 2px 10px 5px #cacaca;\n  }\n`;\nconst Img = styled.img`\n  width: 200px;\n  max-height: 250px;\n  border-radius: 10px;\n`;\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n`;\nconst Name = styled.div``;\nconst Price = styled.div`\n  margin-top: 25px;\n`;\nconst AddCartButton = styled.button`\n  margin-top: 15px;\n  border: none;\n  border-radius: 8px;\n  font-family: \"Poppins\", sans-serif;\n  background-color: var(--color-lime);\n  width: 100px;\n  height: 40px;\n  transition: background-color 400ms ease-in-out;\n  &:hover {\n    cursor: pointer;\n    background-color: var(--color-neon-lime);\n\n    /* color: var(--color-neon-lime);\n    background-color: var(--color-dark-grey); */\n  }\n`;\n\nexport default ItemCard;\n"]},"metadata":{},"sourceType":"module"}