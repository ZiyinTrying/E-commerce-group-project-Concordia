{"ast":null,"code":"var _jsxFileName = \"/Users/gracechen/Documents/Documents - Grace\\u2019s MacBook Pro/concordia-bootcamps/project-GROUP-e-commerce/client/src/components/DropDown.js\";\nimport React, { createContext, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport arrow from \"../arrow.png\";\n\nconst DropDown = () => {\n  const history = useHistory();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [categories, setCategories] = useState(null);\n\n  const getCategory = ev => {\n    setSelectedCategory(ev.target.value);\n    history.push(`/items/category/${ev.target.value}`);\n  }; // fetch the categories and put it into state catogory\n\n\n  useEffect(() => {\n    fetch(\"/categories\").then(res => res.json()).then(data => {\n      setCategories(data.data);\n    }).catch(err => {\n      console.log(\"error\");\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n    onChange: ev => getCategory(ev),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, \"Select Catogory\"), categories === null || categories === void 0 ? void 0 : categories.map((category, index) => {\n    return /*#__PURE__*/React.createElement(Option, {\n      key: index,\n      value: category.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, category.name);\n  })));\n};\n\nconst Select = styled.select`\n\tposition: fixed;\n\n\ttop: 80px;\n\tz-index: 2;\n\twidth: 100%;\n\tfont-size: 20px;\n\tcolor: var(--color-dark-grey);\n\tpadding: 10px 20px;\n\tbackground-color: var(--color-lime);\n\tborder-radius: 0 0 5px 5px;\n\tborder: none;\n\tappearance: none;\n\ttransition: background-color 400ms ease-in-out;\n\tbackground-image: url(${arrow});\n\tbackground-repeat: no-repeat;\n\tbackground-position: 185px center;\n\tbackground-size: 15px 15px;\n\t&:hover {\n\t\tcursor: pointer;\n\t\tbackground-color: var(--color-neon-lime);\n\t}\n`;\nconst Option = styled.option`\n\tcolor: blue;\n\tborder: 2px solid black;\n`;\nexport default DropDown;","map":{"version":3,"sources":["/Users/gracechen/Documents/Documents - Graceâ€™s MacBook Pro/concordia-bootcamps/project-GROUP-e-commerce/client/src/components/DropDown.js"],"names":["React","createContext","useState","useEffect","styled","useHistory","arrow","DropDown","history","selectedCategory","setSelectedCategory","categories","setCategories","getCategory","ev","target","value","push","fetch","then","res","json","data","catch","err","console","log","map","category","index","name","Select","select","Option","option"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACtB,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AAEA,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;;AACA,QAAMW,WAAW,GAAIC,EAAD,IAAQ;AAC3BJ,IAAAA,mBAAmB,CAACI,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAnB;AACAR,IAAAA,OAAO,CAACS,IAAR,CAAc,mBAAkBH,EAAE,CAACC,MAAH,CAAUC,KAAM,EAAhD;AACA,GAHD,CALsB,CAStB;;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACfe,IAAAA,KAAK,CAAC,aAAD,CAAL,CACEC,IADF,CACQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADhB,EAEEF,IAFF,CAEQG,IAAD,IAAU;AACfV,MAAAA,aAAa,CAACU,IAAI,CAACA,IAAN,CAAb;AACA,KAJF,EAKEC,KALF,CAKSC,GAAD,IAAS;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,KAPF;AAQA,GATQ,EASN,EATM,CAAT;AAUA,sBACC,uDACC,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAGZ,EAAD,IAAQD,WAAW,CAACC,EAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,EAEEH,UAFF,aAEEA,UAFF,uBAEEA,UAAU,CAAEgB,GAAZ,CAAgB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACrC,wBACC,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAED,QAAQ,CAACE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEF,QAAQ,CAACE,IADX,CADD;AAKA,GANA,CAFF,CADD,CADD;AAcA,CAlCD;;AAmCA,MAAMC,MAAM,GAAG3B,MAAM,CAAC4B,MAAO;;;;;;;;;;;;;;yBAcJ1B,KAAM;;;;;;;;CAd/B;AAuBA,MAAM2B,MAAM,GAAG7B,MAAM,CAAC8B,MAAO;;;CAA7B;AAIA,eAAe3B,QAAf","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport arrow from \"../arrow.png\";\n\nconst DropDown = () => {\n\tconst history = useHistory();\n\n\tconst [selectedCategory, setSelectedCategory] = useState(null);\n\tconst [categories, setCategories] = useState(null);\n\tconst getCategory = (ev) => {\n\t\tsetSelectedCategory(ev.target.value);\n\t\thistory.push(`/items/category/${ev.target.value}`);\n\t};\n\t// fetch the categories and put it into state catogory\n\tuseEffect(() => {\n\t\tfetch(\"/categories\")\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetCategories(data.data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(\"error\");\n\t\t\t});\n\t}, []);\n\treturn (\n\t\t<>\n\t\t\t<Select onChange={(ev) => getCategory(ev)}>\n\t\t\t\t<Option>Select Catogory</Option>\n\t\t\t\t{categories?.map((category, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Option key={index} value={category.name}>\n\t\t\t\t\t\t\t{category.name}\n\t\t\t\t\t\t</Option>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Select>\n\t\t</>\n\t);\n};\nconst Select = styled.select`\n\tposition: fixed;\n\n\ttop: 80px;\n\tz-index: 2;\n\twidth: 100%;\n\tfont-size: 20px;\n\tcolor: var(--color-dark-grey);\n\tpadding: 10px 20px;\n\tbackground-color: var(--color-lime);\n\tborder-radius: 0 0 5px 5px;\n\tborder: none;\n\tappearance: none;\n\ttransition: background-color 400ms ease-in-out;\n\tbackground-image: url(${arrow});\n\tbackground-repeat: no-repeat;\n\tbackground-position: 185px center;\n\tbackground-size: 15px 15px;\n\t&:hover {\n\t\tcursor: pointer;\n\t\tbackground-color: var(--color-neon-lime);\n\t}\n`;\nconst Option = styled.option`\n\tcolor: blue;\n\tborder: 2px solid black;\n`;\nexport default DropDown;\n"]},"metadata":{},"sourceType":"module"}