{"ast":null,"code":"var _jsxFileName = \"/Users/gracechen/Documents/Documents - Grace\\u2019s MacBook Pro/concordia-bootcamps/project-GROUP-e-commerce/client/src/components/ItemDetails.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport styled from \"styled-components\";\nimport { ItemsContext } from \"./ItemsContext\";\nimport Button from \"./Button\";\n\nconst ItemDetails = () => {\n  const {\n    _id\n  } = useParams(); //consuming array where we gonna store selected items\n\n  const {\n    cartItems,\n    setCartItems,\n    setReRender,\n    reRender\n  } = useContext(ItemsContext); //variable to store fetch result\n\n  const [item, setItem] = useState(null); //variable to store number of items user wants to put to the cart\n\n  const [quantity, setQuantity] = useState(1);\n  useEffect(() => {\n    fetch(`/items/${_id}`).then(res => res.json()).then(data => setItem(data.data)).catch(err => {\n      console.log(\"error\");\n    });\n  }, [_id]); //decreases num of items by 1\n\n  const handleDecrement = () => {\n    if (quantity > 0) setQuantity(quantity - 1);\n  }; //increases num of items by 1\n\n\n  const handleIncrement = () => {\n    if (quantity <= item.numInStock - 1) setQuantity(quantity + 1);\n  }; //pushing selected item into array \"cartItems\", where we store all items user picks\n\n\n  const handleAddToCart = () => {\n    let myIndex; //searchin for an item in the array who's id matches the id of the item we are addin to the cart\n\n    let selectedItem = cartItems.find((element, index) => {\n      if (item._id === element._id) {\n        myIndex = index;\n      }\n\n      return item._id === element._id;\n    }); //if we find selected item in the array of items, add selected quantity to the existing one;\n\n    if (selectedItem) {\n      //if we don't have enough of items give an alert\n      if ((selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.quantity) + quantity > item.numInStock) {\n        window.alert(\"Not enough of items\");\n      } else {\n        let cartCopy = [...cartItems];\n        let newQuantity = selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.quantity;\n        cartCopy[myIndex] = { ...selectedItem,\n          quantity: quantity + newQuantity\n        };\n        setCartItems(cartCopy);\n        setReRender(!reRender);\n      }\n    } //if we don't have matching item in the array - push it in the array\n    else {\n        setCartItems([...cartItems, { ...item,\n          quantity: quantity\n        }]);\n        setReRender(!reRender);\n      }\n  }; //storing array with selected items in local storage if it's not empty\n\n\n  if ((cartItems === null || cartItems === void 0 ? void 0 : cartItems.length) !== 0) {\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, item && /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: item.imageSrc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Info, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Name, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, item.name), /*#__PURE__*/React.createElement(InStock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"In stock: \", item.numInStock), /*#__PURE__*/React.createElement(Price, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, item.price), /*#__PURE__*/React.createElement(Quantity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Btn, {\n    onClick: handleDecrement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(Number, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, quantity), /*#__PURE__*/React.createElement(Btn, {\n    onClick: handleIncrement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"+\")), quantity === item.numInStock + 1 || quantity === 0 ? /*#__PURE__*/React.createElement(Disabled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Add to cart\") : /*#__PURE__*/React.createElement(Button, {\n    onClick: handleAddToCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Add to cart\")))));\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 85vh;\n  padding-top: 80px;\n`;\nconst Card = styled.div`\n  margin-top: 30px;\n  display: flex;\n  width: 900px;\n  padding: 20px;\n  border-radius: 10px;\n  transition: 0.4s ease-in-out;\n  background: var(--color-dark-grey);\n  color: var(--color-light-grey);\n  box-shadow: -2px 2px 10px 5px #cacaca;\n`;\nconst Image = styled.img`\n  flex: 1;\n  height: 100%;\n  border-radius: 10px;\n`;\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n  margin: 20px;\n`;\nconst Name = styled.div`\n  margin: 20px;\n  font-size: 24px;\n`;\nconst Price = styled.div`\n  margin: 20px;\n  text-align: left;\n  font-size: 24px;\n`;\nconst InStock = styled.div`\n  margin: 20px;\n  align-self: flex-start;\n`;\nconst Quantity = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Number = styled.span`\n  margin: 10px;\n  color: var(--color-lime);\n  font-weight: 700;\n`;\nconst Btn = styled.button`\n  padding: 5px 10px;\n  border: 1px solid var(--color-dark-grey);\n  border-radius: 5px;\n`;\nconst Disabled = styled.button`\n  margin: 20px;\n  position: relative;\n  display: inline-block;\n  padding: 15px 30px;\n  background: var(--color-light-grey);\n  color: var(--color-dark-grey);\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: 24px;\n  overflow: hidden;\n  border: 2px solid var(--color-dark-grey);\n  border-radius: 5px;\n  &:hover {\n    cursor: not-allowed;\n  }\n`;\nexport default ItemDetails;","map":{"version":3,"sources":["/Users/gracechen/Documents/Documents - Graceâ€™s MacBook Pro/concordia-bootcamps/project-GROUP-e-commerce/client/src/components/ItemDetails.js"],"names":["React","useContext","useState","useEffect","useParams","styled","ItemsContext","Button","ItemDetails","_id","cartItems","setCartItems","setReRender","reRender","item","setItem","quantity","setQuantity","fetch","then","res","json","data","catch","err","console","log","handleDecrement","handleIncrement","numInStock","handleAddToCart","myIndex","selectedItem","find","element","index","window","alert","cartCopy","newQuantity","length","localStorage","JSON","stringify","imageSrc","name","price","Wrapper","div","Card","Image","img","Info","Name","Price","InStock","Quantity","Number","span","Btn","button","Disabled"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\n\nimport styled from \"styled-components\";\n\nimport { ItemsContext } from \"./ItemsContext\";\n\nimport Button from \"./Button\";\n\nconst ItemDetails = () => {\n  const { _id } = useParams();\n\n  //consuming array where we gonna store selected items\n  const { cartItems, setCartItems, setReRender, reRender } =\n    useContext(ItemsContext);\n\n  //variable to store fetch result\n  const [item, setItem] = useState(null);\n\n  //variable to store number of items user wants to put to the cart\n  const [quantity, setQuantity] = useState(1);\n\n  useEffect(() => {\n    fetch(`/items/${_id}`)\n      .then((res) => res.json())\n      .then((data) => setItem(data.data))\n      .catch((err) => {\n        console.log(\"error\");\n      });\n  }, [_id]);\n\n  //decreases num of items by 1\n  const handleDecrement = () => {\n    if (quantity > 0) setQuantity(quantity - 1);\n  };\n\n  //increases num of items by 1\n  const handleIncrement = () => {\n    if (quantity <= item.numInStock - 1) setQuantity(quantity + 1);\n  };\n\n  //pushing selected item into array \"cartItems\", where we store all items user picks\n  const handleAddToCart = () => {\n    let myIndex;\n\n    //searchin for an item in the array who's id matches the id of the item we are addin to the cart\n    let selectedItem = cartItems.find((element, index) => {\n      if (item._id === element._id) {\n        myIndex = index;\n      }\n\n      return item._id === element._id;\n    });\n\n    //if we find selected item in the array of items, add selected quantity to the existing one;\n    if (selectedItem) {\n      //if we don't have enough of items give an alert\n      if (selectedItem?.quantity + quantity > item.numInStock) {\n        window.alert(\"Not enough of items\");\n      } else {\n        let cartCopy = [...cartItems];\n        let newQuantity = selectedItem?.quantity;\n        cartCopy[myIndex] = {\n          ...selectedItem,\n          quantity: quantity + newQuantity,\n        };\n        setCartItems(cartCopy);\n        setReRender(!reRender)\n      }\n    }\n\n    //if we don't have matching item in the array - push it in the array\n    else {\n      setCartItems([...cartItems, { ...item, quantity: quantity }]);\n      setReRender(!reRender)\n    }\n  };\n\n  //storing array with selected items in local storage if it's not empty\n  if (cartItems?.length !== 0) {\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  }\n\n  return (\n    <>\n      {item && (\n        <Wrapper>\n          <Card>\n            <Image src={item.imageSrc} />\n            <Info>\n              <Name>{item.name}</Name>\n              <InStock>In stock: {item.numInStock}</InStock>\n              <Price>{item.price}</Price>\n              <Quantity>\n                <Btn onClick={handleDecrement}>-</Btn>\n                <Number>{quantity}</Number>\n                <Btn onClick={handleIncrement}>+</Btn>\n              </Quantity>\n              {quantity === item.numInStock + 1 || quantity === 0 ? (\n                <Disabled>Add to cart</Disabled>\n              ) : (\n                <Button onClick={handleAddToCart}>Add to cart</Button>\n              )}\n            </Info>\n          </Card>\n        </Wrapper>\n      )}\n    </>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 85vh;\n  padding-top: 80px;\n`;\nconst Card = styled.div`\n  margin-top: 30px;\n  display: flex;\n  width: 900px;\n  padding: 20px;\n  border-radius: 10px;\n  transition: 0.4s ease-in-out;\n  background: var(--color-dark-grey);\n  color: var(--color-light-grey);\n  box-shadow: -2px 2px 10px 5px #cacaca;\n`;\nconst Image = styled.img`\n  flex: 1;\n  height: 100%;\n  border-radius: 10px;\n`;\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n  margin: 20px;\n`;\nconst Name = styled.div`\n  margin: 20px;\n  font-size: 24px;\n`;\nconst Price = styled.div`\n  margin: 20px;\n  text-align: left;\n  font-size: 24px;\n`;\nconst InStock = styled.div`\n  margin: 20px;\n  align-self: flex-start;\n`;\nconst Quantity = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Number = styled.span`\n  margin: 10px;\n  color: var(--color-lime);\n  font-weight: 700;\n`;\nconst Btn = styled.button`\n  padding: 5px 10px;\n  border: 1px solid var(--color-dark-grey);\n  border-radius: 5px;\n`;\nconst Disabled = styled.button`\n  margin: 20px;\n  position: relative;\n  display: inline-block;\n  padding: 15px 30px;\n  background: var(--color-light-grey);\n  color: var(--color-dark-grey);\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: 24px;\n  overflow: hidden;\n  border: 2px solid var(--color-dark-grey);\n  border-radius: 5px;\n  &:hover {\n    cursor: not-allowed;\n  }\n`;\n\nexport default ItemDetails;\n"]},"metadata":{},"sourceType":"module"}